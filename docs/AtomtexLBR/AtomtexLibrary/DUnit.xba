<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DUnit" script:language="StarBasic">REM  *****  BASIC  *****

Option Compatible
Option ClassModule
Option Explicit

REM --- Internal Variables                                                                           
private _BDname As String
private _measUnit As String
private _pointValue as new Collection
private _pointText as new Collection
private _BDType as string
private _measLimit(1) as double
private _measMinLimit as double
private _measMaxLimit as double
private _isPrintable as boolean
private _measuredValue as new Collection
private _pointCount as integer
private _emptyCollection as new Collection

REM --- CONSTRUCTORS / DESTRUCTORS                                                                    
Private Sub Class_Initialize()
	
End Sub

Private Sub Class_Terminate()
end sub

REM --- CLASS METHODS
Public Sub addData(ByVal BDname as string, ByVal measUnit as string, ByVal pointValue as variant, ByVal pointText as variant, ByVal BDType as string, ByVal measLimit as variant)
	dim arr(0) as double
	dim ar2(0) as double
	dim ar3(1) as double
	_BDname = BDname
	_measUnit = measUnit
	_BDType = BDType
	arr = pointValue
	ar2 = pointText
	ar3 = measLimit
	_measMinLimit = ar3(0)
	_measMaxLimit = ar3(1)
	dim i as integer
	for i=0 to uBound(arr)
		_pointValue.add(arr(i))
		_pointText.add(ar2(i))
		_measuredValue.add(-1)
	next i
	_pointCount = uBound(arr)+1
	&apos;msgbox &quot;adddata - &quot; + BDName
	rem msgbox _pointValue.item(2)
End Sub

REM --- CLASS GET/LET/SET PROPERTIES                                                                 
Public Property Get isPrintable As boolean
   isPrintable = _isPrintable
End Property

Public Property Let isPrintable(ByVal pValue As boolean)
   _isPrintable = pValue
End property

Public Function BDName As string
   BDName = _BDName
   &apos;msgbox &quot;getter - &quot; + BDName
End Function

Public Function measUnit As string
   measUnit = _measUnit
End Function

Public Function BDType As string
   BDType = _BDType
End Function

Public Function pointCount As integer
   pointCount = _pointCount
End Function

rem Список контрольных точек (0.7, 7, ...)
Public Function pointList As Collection
   pointList = _pointValue
End Function

rem Список префиксов контрольных точек (&quot;мк&quot;, &quot;м&quot;, ...)
Public Function pointTextList As Collection
   pointTextList = _pointText
End Function

public function setValueList(measuredValue as Collection)
	_measuredValue = measuredValue
end function

rem список измеренных значений (0.67, 73, ...)
public function valueList as Collection
	&apos;dim valueList(8) as double
	valueList = _measuredValue
end function

public function minLimit as double
	minLimit = _measMinLimit
end function

public function maxLimit as double
	maxLimit = _measMaxLimit
end function
</script:module>