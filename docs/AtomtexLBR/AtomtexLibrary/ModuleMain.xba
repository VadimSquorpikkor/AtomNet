<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ModuleMain" script:language="StarBasic">REM  *****  BASIC  *****


dim oDialogMain as object 
&apos;dim sertPath as String
global sertPath as String


rem-------------------------------------------------------------------------
Sub MainDialog_Show
	rem sertPath = &quot;file:///f:\sert_template\&quot;
	dim user_name as String

	rem Установить
	
	user_name = &quot;Tarasenko_VV&quot;  	
	rem user_name = &quot;Serikov_VA&quot;
	rem user_name = &quot;Squorpikkor&quot;
	sertPath = &quot;file:///c:\Users\&quot; + user_name + &quot;\AppData\Roaming\OpenOffice\4\user\basic\AtomtexLibrary\sert_template\&quot;
	rem sertPath = &quot;file:///C:\Users\Public\Documents\AtomtexLibrary\sert_template\&quot;
	
	
   DialogLibraries.LoadLibrary( &quot;AtomtexLibrary&quot; )
   oDialogMain = CreateUnoDialog( DialogLibraries.AtomtexLibrary.DialogMain )
   	oDialogMain.Model.getByName(&quot;ImageControl1&quot;).ImageURL = sertPath &amp; &quot;АТОМТЕХ.png&quot;
   oDialogMain.Execute()
End Sub

rem --- ВСЕ ОБЩИЕ МЕТОДЫ ЗДЕСЬ ---
function getDate(DateFieldModel)
	dim dnum as long
	dim year as integer
	dim month as integer
	dim day as integer
	&apos;oDateFieldModel = oDialogBDKG02.Model.getByName(&quot;DateField1&quot;)
	dnum = DateFieldModel.date
	day = dnum mod 100
	month = dnum \ 100 mod 100
	year = dnum \ 10000
	getDate = insertZero(day) &amp;&quot;.&quot;&amp; insertZero(month) &amp;&quot;.&quot;&amp; year
end function
&apos;--------------------------------------------------------------------	
function insertZero(number)
	if number &gt; 9 then
		insertZero = number
	else 
		insertZero = &quot;0&quot;&amp;number
	end if
end function
rem-------------------------------------------------------------------------
sub subInsertString(oDoc, sString, bReplace)
	oVC = oDoc.getCurrentSelection
	xText.insertString( xTextCursor, &quot;more text ...&quot;, false )
end sub
rem------метод для сортировки столбцов в calc-------------------------------------------------
sub sortColumns 
	rem Сортировка выделенных столбцов в Calc 
	dim document   as object
	dim dispatcher as object
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	dim args1(6) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;ByRows&quot;
	args1(0).Value = false
	args1(1).Name = &quot;HasHeader&quot;
	args1(1).Value = true
	args1(2).Name = &quot;CaseSensitive&quot;
	args1(2).Value = false
	args1(3).Name = &quot;IncludeAttribs&quot;
	args1(3).Value = true
	args1(4).Name = &quot;UserDefIndex&quot;
	args1(4).Value = 0
	args1(5).Name = &quot;Col1&quot;
	args1(5).Value = 1
	args1(6).Name = &quot;Ascending1&quot;
	args1(6).Value = true

	dispatcher.executeDispatch(document, &quot;.uno:DataSort&quot;, &quot;&quot;, 0, args1())
end sub
rem-------------------------------------------------------------------------
Function MySubstitute(sText1 as string, sText2 as string, sText3 as string) as string
   FuncAcc = createunoservice(&quot;com.sun.star.sheet.FunctionAccess&quot;)
   MySubstitute = FuncAcc.callFunction(&quot;SUBSTITUTE&quot;, array(sText1,sText2,sText3))
End function
rem-------------------------------------------------------------------------
Function ComboItemPosition(ComboBox as variant)
   For x = 0 to ComboBox.ItemCount - 1
      If ComboBox.Items(x) = ComboBox.Text Then
         ComboItemPosition = x
      end if
   next x
end Function

rem-------------------------------------------------------------------------
Sub collection2()
   Dim oColl As New Collection, i As Integer
   oColl.Add(&quot;First&quot;)
   oColl.Add(&quot;Second&quot;)
   oColl.Add(&quot;Third&quot;)
   Print oColl.Count &amp; &quot;/&quot;;
   For i = 1 To oColl.Count
      Print oColl.Item(i) &amp; &quot;/&quot;;
   Next i
   Print
End Sub
Sub collection3()   
   &apos;Dim du As New DUnit
   &apos;du.addData(&quot;БДКГ-01&quot;,&quot;Зв/ч&quot;, Array(20,70,0.7,7,70), Array(&quot;мк&quot;,&quot;мк&quot;,&quot;м&quot;,&quot;м&quot;,&quot;м&quot;), &quot;gamma&quot;, Array(1,5))
   &apos;du.printBDType
End Sub 
Sub collection()
   dim bd1 as new DUnit
   dim BDList as new collection
	bd1.addData(&quot;БДКГ-01&quot;,&quot;Зв/ч&quot;, Array(20,70,0.7,7,70), Array(&quot;мк&quot;,&quot;мк&quot;,&quot;м&quot;,&quot;м&quot;,&quot;м&quot;), &quot;gamma&quot;, Array(1,5))
	BDList.add(bd1)
	msgbox BDList.item(1).BDName
   
End Sub
rem-------------------------------------------------------------------------
Sub coll()
   Dim oColl As New Collection, i As Integer
   oColl.Add(&quot;First item&quot;,&quot;AAA&quot;)
   oColl.Add(&quot;Second item&quot;,&quot;BBB&quot;)
   oColl.Add(&quot;1,5th item&quot;,&quot;CCC&quot;,,&quot;AAA&quot;)         &apos;   After &quot;AAA&quot;
   REM oColl.Add(&quot;1,5th item&quot;,&quot;CCC&quot;,&quot;BBB&quot;)      &apos;   Before &quot;BBB&quot;
   oColl.Add(&quot;Third item&quot;,&quot;DDD&quot;)
   oColl.Remove(&quot;AAA&quot;)
   REM oColl.Remove(1)
   Print oColl.Count &amp; &quot;/&quot;;
   For i = 1 To oColl.Count
      Print oColl.Item(i) &amp; &quot;/&quot;;
   Next i
   Print
End Sub
rem-------------------------------------------------------------------------
Sub CopyVariableToClipboard(text as string)
dim document   as object
dim dispatcher as object
dim oDoc, oVC
oDoc = ThisComponent
oVC = oDoc.CurrentController.getViewCursor
oVC.String = text
document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
dispatcher.executeDispatch(document, &quot;.uno:Copy&quot;, &quot;&quot;, 0, Array())
oVC.String = &quot;&quot;
End Sub
rem-------------------------------------------------------------------------
sub insertDate
   dim document   as object
   dim dispatcher as object
   document   = ThisComponent.CurrentController.Frame
   dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
   dim args1(0) as new com.sun.star.beans.PropertyValue
   args1(0).Name = &quot;Text&quot;
   args1(0).Value = getDate()
   dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, args1())
end sub
rem-------------------------------------------------------------------------
function FillArrayFromSelection
rem Супер метод -- заполняет массив данными из выделенной области в Calc и возвращает этот массив
rem 
    dim oCellRange as object
    dim oCursor as object
    dim oRange as object
    dim oSheet as object
    dim startRow as long, startColumn as long, endRow as long, endColumn as long
    dim x,y as long
    dim oRow, oArray

    oSheet = thiscomponent.currentcontroller.activesheet
    oCellRange = thiscomponent.getcurrentselection

    startRow= oCellRange.getrangeaddress.startrow
    startColumn = oCellRange.getrangeaddress.startcolumn
    endRow = oCellRange.getrangeaddress.endrow
    endColumn =oCellRange.getrangeaddress.endcolumn

    oCellRange = thiscomponent.currentcontroller.getselection
    oRange = oSheet.getcellrangebyposition(startColumn,startRow,endColumn,endRow)

    oArray = oRange.getDataArray()
      
    dim RangeData(UBound(oArray),UBound(oArray(0)))
   
    for x = 0 to UBound(oArray)
       for y = 0 to UBound(oArray(x))
          RangeData(x,y) = oArray(x)(y)
       next y
    next x
    FillArrayFromSelection = RangeData
End function

rem -------------------------------------------------------------------------------------------
Sub OpenTemplate(documentURL)
    Dim Doc As Object
    Dim Url As String
    Dim Dummy() &apos;An (empty) array of PropertyValues
    Url = documentURL
    Doc = StarDesktop.loadComponentFromURL(Url, &quot;_blank&quot;, 0, Dummy)
End Sub
rem------------------------------------------------------------
Sub findAndRename(target as String, newName as String)
    Dim oDescriptor &apos;Описатель поиска
    Dim oFound &apos;Найденный диапазон
    Dim oFoundAll &apos;Найденный диапазон
    Dim n% &apos;Общая индексная переменная
    oDescriptor = ThisComponent.createSearchDescriptor()
    oDescriptor.SearchString = target
    oFoundAll = ThisComponent.findAll(oDescriptor)
    For n% = 0 to oFoundAll.getCount()-1
        oFound = oFoundAll.getByIndex(n%)
        oFound.setString(newName)
    Next
End Sub
rem------------------------------------------------------------
Sub findAndDoSomething
Dim oSDescr As Variant
Dim oResults As Variant
Dim oFound As Variant
Dim sText As String
Dim i As Long
   oSDescr = ThisComponent.createSearchDescriptor()
   oSDescr.setSearchString(&quot;Giv besked, hvis du ikke kan komme&quot;) &apos; Or what?
   oResults = ThisComponent.findAll(oSDescr)
   If IsEmpty(oResults) Or IsNull(oResults) Then Exit Sub   &apos; Nothing to do...
   For i = 0 To oResults.getCount()-1   &apos; Enumerate all results
      oFound = oResults.getByIndex(i)   &apos; One of them
&apos; Now do something
&apos; for example sText = oFound.getString()
&apos; or oFound.setString(&quot;It was &quot;+(i+1)+&quot; fragment&quot;)
&apos; or If oFound.CharHeight &lt;&gt; 10 Then...Else...EndIf
   Next i
End Sub
rem------------------------------------------------------------
Sub CopyToClipBoard( sText )
  Dim oClip, oTR
  &apos; create SystemClipboard instance
  oClip = CreateUnoService( _
      &quot;com.sun.star.datatransfer.clipboard.SystemClipboard&quot;)
  oTR = createUnoListener(&quot;Tr_&quot;, _
      &quot;com.sun.star.datatransfer.XTransferable&quot;)
  &apos; set data
  oClip.setContents( oTR,Null )
  sTxtCString = sText
  &apos;oClip.flushClipboard() &apos; does not work
End Sub
rem--------------------------------------------------------------
sub QQQtestpath
Dim fp As String, fn As String
fp = ThisComponent.Location
fn = Dir(fp) &apos; first call with path argument
MsgBox(fn, 0, fp)
while len(fn) &gt; 0
  fn = dir() &apos;subsequent calls without path
  msgbox fn
wend
end sub

sub testpath
&apos;s = oDialogMain.getURL()
&apos;dim s as string
 &apos;s=DialogLibraries.LoadLibrary( &quot;AtomtexLibrary&quot; ).url
msgbox DialogLibraries.LoadLibrary( &quot;AtomtexLibrary&quot; ).geturl
end sub

</script:module>