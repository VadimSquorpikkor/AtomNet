<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="CUnit" script:language="StarBasic">REM  *****  BASIC  *****
rem ╔╗╚╝║═▄▌▀▌
rem ╔═══════════════════════════════════════════════════════════════════════════════╗
rem ║	Класс блоков детектирования для МРП и Портальных мониторов: в отличии		║▌
rem	║	от DUnit здесь нет контрольных точек, есть только 5 измерений скорости		║▌
rem	║	счета на фоне и от источника. Также для каждого типа БД свой коэффициент  	║▌
rem	╚═══════════════════════════════════════════════════════════════════════════════╝▌
rem	  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Option Compatible
Option ClassModule
Option Explicit

REM --- Internal Variables                                                                           
private _BDnumber As String					rem 452.000
private _pointBGValue as new Collection		rem 330
private _pointSrcValue as new Collection	rem 10000
private _delta as double					rem 110.1
private _bdtype as string					rem &quot;БДКГ-11/1&quot;

REM --- CLASS METHODS
public function getDelta	rem 110.1
	getDelta = _delta
end function

public function getType	rem &quot;БДКГ-11/1&quot;
	getType = _bdtype
end function

public function getSerial	rem &quot;452.000&quot;
	getSerial = _BDnumber
end function

public function setSerial(serial as string)	rem &quot;452.000&quot;
	_BDnumber = serial
end function

Public Sub setAsBDKG11
	dim i as integer
	dim BgValue, SrcValue as double
	BgValue = 330
	SrcValue = 10000
	_delta = 110.1 
	for i=1 to 5
		_pointBGValue.add(BgValue)
		_pointSrcValue.add(SrcValue)
	next i
	_bdtype = &quot;БДКГ-11/1&quot;
end sub

Public Sub setAsBDKG19
	dim i as integer
	dim BgValue, SrcValue as double
	BgValue = 660
	SrcValue = 13000
	_delta = 147.8
	for i=1 to 5
		_pointBGValue.add(BgValue)
		_pointSrcValue.add(SrcValue)
	next i
	_bdtype = &quot;БДКГ-19&quot;	
end sub

Public Sub setAsBDKG35
	dim i as integer
	dim BgValue, SrcValue as double
	BgValue = 200
	SrcValue = 5000
	_delta = 55
	for i=1 to 5
		_pointBGValue.add(BgValue)
		_pointSrcValue.add(SrcValue)
	next i
	_bdtype = &quot;БДКГ-35&quot;	
end sub

Public Sub setAsBDRM05
	dim i as integer
	dim BgValue, SrcValue as double
	BgValue = 1700
	SrcValue = 13000
	_delta = 110.1
	for i=1 to 5
		_pointBGValue.add(BgValue)
		_pointSrcValue.add(SrcValue)
	next i
	_bdtype = &quot;БДРМ-05&quot;	
end sub



public function setBGList(measuredBGValue as Collection)
	_pointBGValue = measuredBGValue
end function

public function getBGList as Collection
	getBGList = _pointBGValue
end function

public function setSrcList(measuredSrcValue as Collection)
	_pointSrcValue = measuredSrcValue
end function

public function getSrcList as Collection
	getSrcList = _pointSrcValue
end function

public function getBgAverage
	dim i as integer
	dim avr as double
	avr = 0
	for i=1 to _pointBGValue.count
		avr = avr + _pointBGValue.item(i)
	next i
	getBgAverage = avr/_pointBGValue.count
end function

public function getSrcAverage
	dim i as integer
	dim avr as double
	avr = 0
	for i=1 to _pointSrcValue.count
		avr = avr + _pointSrcValue.item(i)
	next i
	getSrcAverage = avr/_pointSrcValue.count
end function

public function getSensitivity(activity as double) as double
	getSensitivity = (getSrcAverage - getBgAverage)/activity
end function

&apos;public function getSensitivity(activity as double)
&apos;	getSensitivity = (getSrcAverage - getBgAverage)/activity
&apos;end function
</script:module>