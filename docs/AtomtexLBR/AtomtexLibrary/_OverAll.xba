<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="_OverAll" script:language="StarBasic">REM  *****  BASIC  *****
rem ╔╗╚╝║═▄▌▀▌
rem----------------------------------------------------------------
rem			ВСЕ ОБЩИЕ МЕТОДЫ БУДУТ ХРАНИТЬСЯ ЗДЕСЬ
rem----------------------------------------------------------------

rem------------относительная погрешность измерения-----------------
function otn_pogreshnost(meas as double, contr_point as double)
	otn_pogreshnost = ((meas - contr_point) / contr_point) * 100
end function
rem------------доверительная граница погрешности измерения---------
function dov_granica(pogr as double, percent as integer)
	dov_granica = 1.1 * sqr(percent*percent + pogr*pogr)
end function
rem------------относительная погрешность измерения-----------------
function RelativeError(meas as double, contr_point as double)
	RelativeError = ((meas - contr_point) / contr_point) * 100
end function
rem------------доверительная граница погрешности измерения---------
function ConfidenceLimit(pogr as double, percent as integer)
	ConfidenceLimit = 1.1 * sqr(percent*percent + pogr*pogr)
end function
rem=======================================================================================
sub deleteTable(name as string)
tables = ThisComponent.TextTables()
     if tables.hasByName(name) then
     ThisComponent.Text.removeTextContent(tables.getByName(name))
     end if
end sub
rem----------------------------------------------------------------
function sourceDistanceArray(point as double, prefix as string, bdType as string)
	dim ar(1) as variant
	ar = Array(&quot;Неизв&quot;,&quot;Неизв&quot;) rem если точка не будет найдена, останется значение по умолчанию -- не найдено
	rem если это гамма блок:
	if bdType = &quot;gamma&quot; OR bdType = &quot;gamma-Gy&quot; then
		if prefix = &quot;н&quot; then
				if point = 75	then ar = Array(&quot;263&quot;,&quot;176.5&quot;)
		end if
		if prefix = &quot;мк&quot; then
				if point = 0.03	then ar = Array(&quot;263&quot;,&quot;304.7&quot;)
				if point = 0.07	then ar = Array(&quot;263&quot;,&quot;200.7&quot;)
				if point = 0.075 then ar = Array(&quot;263&quot;,&quot;176.5&quot;)
				if point = 0.7 	then ar = Array(&quot;0НА&quot;,&quot;236&quot;)
				if point = 0.75	then ar = Array(&quot;263&quot;,&quot;562.4&quot;)
				if point = 7 	then ar = Array(&quot;0НА&quot;,&quot;76&quot;)
				if point = 7.5 	then ar = Array(&quot;0НА&quot;,&quot;66.6&quot;)
				if point = 70 	then ar = Array(&quot;К/С Г3&quot;,&quot;257&quot;)
				if point = 75 	then ar = Array(&quot;9ХК&quot;,&quot;144.1&quot;)
				if point = 20 	then ar = Array(&quot;9ХК&quot;,&quot;299.9&quot;)
				if point = 240 	then ar = Array(&quot;9ХК&quot;,&quot;88.9&quot;)
		end if
		if prefix = &quot;м&quot; then
				if point = 0.5 	then ar = Array(&quot;9XK&quot;,&quot;56.6&quot;)
				if point = 0.7 	then ar = Array(&quot;К/С Г3&quot;,&quot;82&quot;)
				if point = 0.75	then ar = Array(&quot;9XK&quot;, &quot;46.2&quot;)
				if point = 7.5 	then ar = Array(&quot;9TH&quot;,&quot;51.8&quot;)
				if point = 7 	then ar = Array(&quot;043&quot;,&quot;357&quot;)
				if point = 70 	then ar = Array(&quot;043&quot;,&quot;114&quot;)
				if point = 75 	then ar = Array(&quot;043&quot;,&quot;100.1&quot;)
				if point = 200 	then ar = Array(&quot;043&quot;,&quot;61.7&quot;)
		end if
		if prefix = &quot;&quot; then
				if point = 0.5 	then ar = Array(&quot;163&quot;,&quot;277.4&quot;)
				if point = 0.7 	then ar = Array(&quot;163&quot;,&quot;235&quot;)
				if point = 0.75	then ar = Array(&quot;163&quot;,&quot;206.7&quot;)
				if point = 7 	then ar = Array(&quot;163&quot;,&quot;76&quot;)
				if point = 7.5 	then ar = Array(&quot;163&quot;,&quot;66.5&quot;)
				if point = 40 	then ar = Array(&quot;163&quot;,&quot;32.7&quot;)
		end if	
	end if
	sourceDistanceArray = ar
end function

rem---------------------------------------------------------------------------------------------------------
sub comboChanged(oEvent As Object)
	Dim oCheckbox As Object
    oComboBox = oEvent.source.model
	select case oComboBox.text
		case &quot;№516&quot;
		oNumericFieldModel.value = get_activity(act516, oDateFieldModel)
		case &quot;№517&quot;
		oNumericFieldModel.value = get_activity(act517, oDateFieldModel)
		case &quot;№518&quot;
		oNumericFieldModel.value = get_activity(act518, oDateFieldModel)
		case &quot;№519&quot;
		oNumericFieldModel.value = get_activity(act519, oDateFieldModel)
		case &quot;№520&quot;
		oNumericFieldModel.value = get_activity(act520, oDateFieldModel)
		case &quot;№521&quot;
		oNumericFieldModel.value = get_activity(act521, oDateFieldModel)
		case &quot;№2910&quot;
		oNumericFieldModel.value = get_activity2910(oDateFieldModel)
	end select	
end sub
rem------метод для сортировки столбцов в calc-------------------------------------------------
sub sortColumns 
	rem Сортировка выделенных столбцов в Calc 
	dim document   as object
	dim dispatcher as object
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	dim args1(6) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;ByRows&quot;
	args1(0).Value = false
	args1(1).Name = &quot;HasHeader&quot;
	args1(1).Value = true
	args1(2).Name = &quot;CaseSensitive&quot;
	args1(2).Value = false
	args1(3).Name = &quot;IncludeAttribs&quot;
	args1(3).Value = true
	args1(4).Name = &quot;UserDefIndex&quot;
	args1(4).Value = 0
	args1(5).Name = &quot;Col1&quot;
	args1(5).Value = 1
	args1(6).Name = &quot;Ascending1&quot;
	args1(6).Value = true

	dispatcher.executeDispatch(document, &quot;.uno:DataSort&quot;, &quot;&quot;, 0, args1())
end sub
rem------------дата строкой с точками------------------------------
function getDate(DateFieldModel) &apos;YYYYMMDD
	dim dnum as long
	dim year as integer
	dim month as integer
	dim day as integer
	&apos;oDateFieldModel = oDialogBDKG02.Model.getByName(&quot;DateField1&quot;)
	dnum = DateFieldModel.date
	&apos;msgbox &quot;DATE: &quot; &amp; dnum
	day = dnum mod 100
	month = dnum \ 100 mod 100
	year = dnum \ 10000
	getDate = insertZero(day) &amp;&quot;.&quot;&amp; insertZero(month) &amp;&quot;.&quot;&amp; year
end function
rem------------дата строкой слэшами--------------------------------
function getDateSlash(DateFieldModel) &apos;YYYYMMDD
	dim dnum as long
	dim year as integer
	dim month as integer
	dim day as integer
	dnum = DateFieldModel.date
	&apos;msgbox &quot;DATE: &quot; &amp; dnum
	day = dnum mod 100
	month = dnum \ 100 mod 100
	year = dnum \ 10000
	getDateSlash = insertZero(day) &amp;&quot;/&quot;&amp; insertZero(month) &amp;&quot;/&quot;&amp; year
end function
rem-------------------------------------------------------------------------
Sub CopyVariableToClipboard(text as string)
dim document   as object
dim dispatcher as object
dim oDoc, oVC
oDoc = ThisComponent
oVC = oDoc.CurrentController.getViewCursor
oVC.String = text
document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
dispatcher.executeDispatch(document, &quot;.uno:Copy&quot;, &quot;&quot;, 0, Array())
oVC.String = &quot;&quot;
End Sub
rem-------------------------------------------------------------------------
sub insertDate
   dim document   as object
   dim dispatcher as object
   document   = ThisComponent.CurrentController.Frame
   dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
   dim args1(0) as new com.sun.star.beans.PropertyValue
   args1(0).Name = &quot;Text&quot;
   args1(0).Value = getDate()
   dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, args1())
end sub
rem-------------------------------------------------------------------------
function FillArrayFromSelection
rem Супер метод -- заполняет массив данными из выделенной области в Calc и возвращает этот массив
rem 
    dim oCellRange as object
    dim oCursor as object
    dim oRange as object
    dim oSheet as object
    dim startRow as long, startColumn as long, endRow as long, endColumn as long
    dim x,y as long
    dim oRow, oArray

    oSheet = thiscomponent.currentcontroller.activesheet
    oCellRange = thiscomponent.getcurrentselection

    startRow= oCellRange.getrangeaddress.startrow
    startColumn = oCellRange.getrangeaddress.startcolumn
    endRow = oCellRange.getrangeaddress.endrow
    endColumn =oCellRange.getrangeaddress.endcolumn

    oCellRange = thiscomponent.currentcontroller.getselection
    oRange = oSheet.getcellrangebyposition(startColumn,startRow,endColumn,endRow)

    oArray = oRange.getDataArray()
      
    dim RangeData(UBound(oArray),UBound(oArray(0)))
   
    for x = 0 to UBound(oArray)
       for y = 0 to UBound(oArray(x))
          RangeData(x,y) = oArray(x)(y)
       next y
    next x
    FillArrayFromSelection = RangeData
End function

rem -------------------------------------------------------------------------------------------
Sub OpenTemplate(documentURL)
    Dim Doc As Object
    Dim Url As String
    Dim Dummy() &apos;An (empty) array of PropertyValues
    Url = documentURL
    Doc = StarDesktop.loadComponentFromURL(Url, &quot;_blank&quot;, 0, Dummy)
End Sub
rem------------------------------------------------------------
Sub findAndRename(target as String, newName as String)
    Dim oDescriptor &apos;Описатель поиска
    Dim oFound &apos;Найденный диапазон
    Dim oFoundAll &apos;Найденный диапазон
    Dim n% &apos;Общая индексная переменная
    oDescriptor = ThisComponent.createSearchDescriptor()
    oDescriptor.SearchString = target
    oFoundAll = ThisComponent.findAll(oDescriptor)
    For n% = 0 to oFoundAll.getCount()-1
        oFound = oFoundAll.getByIndex(n%)
        oFound.setString(newName)
    Next
End Sub
rem------------------------------------------------------------
private function AbsoluteValue(value as double, pref as string) as double
	select case pref
	case &quot;мк&quot;
		AbsoluteValue = value / 1000
	case &quot;м&quot; 
		AbsoluteValue = value 
	case &quot;&quot;
		AbsoluteValue = value * 1000
	end select
end function
rem---------------------------------------------------------------------------------------------------------
sub insertDataIntoTables(Dialog as object, bdName as string, docName as string, BDList as new collection)
		
	MyFormat = &quot;0.0&quot;
	&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;saveCurentBDValue(layoutPosition)
	dim strokeForSaving as string
	strokeForSaving = &quot;&quot;	
	dim path as string
	
	if oOptionButtonPr.State then
		path = docName &amp; &quot;.odt&quot;
	end if
	if oOptionButtonSr.State then
		calibName = rusItems1(ComboItemPosition(Dialog.getControl(&quot;ProvCombo&quot;)))
		techName  = rusItems2(ComboItemPosition(Dialog.getControl(&quot;TechCombo&quot;)))
		path = docName &amp; &quot;_sr.odt&quot;
	end if
	if oOptionButtonSe.State then
		calibName = engItems1(ComboItemPosition(Dialog.getControl(&quot;ProvCombo&quot;)))
		techName  = engItems2(ComboItemPosition(Dialog.getControl(&quot;TechCombo&quot;)))
		path = docName &amp; &quot;_se.odt&quot;
	end if
	
	OpenTemplate(sertPath &amp; path)
	dim percentOtk as double rem отклонение от значения точки для рандомайзера трех точек измерения при расчете среднего значения м.д.  
	dim threePointArray(2) as double
	dim bground as double
	percentOtk = 7 rem %
	bground = Format(randValue(95, 5), MyFormat)
	findAndRename(&quot;$bground&quot;, bground)
	findAndRename(&quot;$temp&quot;, Format(randValue(21, 2), MyFormat))
	findAndRename(&quot;$vlag&quot;, Format(randValue(70, 5), MyFormat))
	findAndRename(&quot;$date&quot;, getDate(Dialog.Model.getByName(&quot;DateField&quot;)))
	findAndRename(&quot;$calibratedBy&quot;, calibName)
	findAndRename(&quot;$controlledBy&quot;, techName)
	
	dim bd as new DUnit
	dim m_point as double
	dim cont_point as double
	
	for k=(BDList.count+1) to maxBDCount rem удаление таблиц сделано в отдельном цикле для ускорения поиска по таблицам в основном цикле, не придется перебирать ненужные таблицы
		deleteTable(&quot;t&quot; + (k))
		deleteTable(&quot;tgrad&quot; + (k))
	next k
	
	for i=1 to BDList.count
		bd = BDList.item(i)
		strokeForSaving = strokeForSaving &amp; bd.BDName &amp; &quot; &quot;
		for j=1 to bd.pointList.count
			m_point = bd.valueList.item(j)
			cont_point = bd.pointList.item(j)
			prefix =  bd.pointTextList.item(j)
			threePointArray = avaragePointsRndArray(m_point, percentOtk)
				
			findAndRename((&quot;$&quot; + (i) + &quot;-3&quot; + (j-1)), sourceDistanceArray(cont_point, prefix, bd.bdType)(0)) rem название источника
			findAndRename((&quot;$&quot; + (i) + &quot;-4&quot; + (j-1)), sourceDistanceArray(cont_point, prefix, bd.bdType)(1)) rem расстояние до источника
				
			rem TODO сделать через select case
			if m_point &lt; 0.1 and m_point &gt; 0  then MyFormat = &quot;0.000&quot;
			if m_point &lt; 1 and m_point &gt;= 0.1 then MyFormat = &quot;0.00&quot;
			if m_point &lt; 100 and m_point &gt;= 1 then MyFormat = &quot;0.0&quot;
			if m_point &gt;= 100 				  then MyFormat = &quot;0&quot;
				
			findAndRename((&quot;$&quot; + (i) + &quot;-6&quot; + (j-1)), Format(threePointArray(0), MyFormat)) rem измерение 1
			findAndRename((&quot;$&quot; + (i) + &quot;-7&quot; + (j-1)), Format(threePointArray(1), MyFormat)) rem измерение 2
			findAndRename((&quot;$&quot; + (i) + &quot;-8&quot; + (j-1)), Format(threePointArray(2), MyFormat)) rem измерение 3
				
			if cont_point&lt;1 and prefix=&quot;мк&quot; then 
				findAndRename((&quot;$&quot; + (i) + &quot;-5&quot; + (j-1)), bground) rem фон
			else	
				findAndRename((&quot;$&quot; + (i) + &quot;-5&quot; + (j-1)), &quot;---&quot;) 
			end if
				
			findAndRename((&quot;$&quot; + (i) + &quot;-0&quot; + (j-1)), Format(m_point, MyFormat)) rem среднее по трем измерениям
				
			rem проверка: если точка меньше 1 мЗв, значит 110-я установка, погрешность которой - 5%, иначе -- 130, где 4% (сравнивается значение точки в микрозивертах)
			dim percent as integer
			if AbsoluteValue(m_point, prefix)&lt;1000 then
				percent = 5
			else
				percent = 4
			end if
				
			dim pogr_point as double
			pogr_point = RelativeError(m_point, cont_point)
			MyFormat = &quot;0.00&quot;
			findAndRename((&quot;$&quot; + (i) + &quot;-1&quot; + (j-1)), Format(pogr_point, MyFormat))
			findAndRename((&quot;$&quot; + (i) + &quot;-2&quot; + (j-1)), Format(ConfidenceLimit(percent, pogr_point), MyFormat))
		next j
		findAndRename(&quot;$bd_num&quot; + i, bd.BDName)
		findAndRename(&quot;$grad&quot; + i, bd.getGradValue)
	next i
	
	findAndRename(&quot;$activity&quot;, Dialog.getControl(&quot;ActivityField&quot;).text)
	findAndRename(&quot;$source&quot;, Dialog.getControl(&quot;ActivityCombo&quot;).text)
	findAndRename(&quot;$serial&quot;, Dialog.getControl(&quot;FULL_NUMBER&quot;).text)

	strokeForSaving = bdName &amp; &quot; &quot; &amp; serial &amp; &quot; ( &quot; &amp; strokeForSaving &amp; &quot;)&quot;
	CopyVariableToClipboard(strokeForSaving)
	msgbox &quot;Готово!&quot;
end sub
</script:module>