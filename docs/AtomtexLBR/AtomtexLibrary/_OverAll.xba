<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="_OverAll" script:language="StarBasic">REM  *****  BASIC  *****

rem----------------------------------------------------------------
rem			ВСЕ ОБЩИЕ МЕТОДЫ БУДУТ ХРАНИТЬСЯ ЗДЕСЬ
rem----------------------------------------------------------------

rem------------относительная погрешность измерения-----------------
function otn_pogreshnost(meas as double, contr_point as double)
	otn_pogreshnost = ((meas - contr_point) / contr_point) * 100
end function
rem------------доверительная граница погрешности измерения---------
function dov_granica(pogr as double, percent as integer)
	dov_granica = 1.1 * sqr(percent*percent + pogr*pogr)
end function
rem------------относительная погрешность измерения-----------------
function RelativeError(meas as double, contr_point as double)
	RelativeError = ((meas - contr_point) / contr_point) * 100
end function
rem------------доверительная граница погрешности измерения---------
function ConfidenceLimit(pogr as double, percent as integer)
	ConfidenceLimit = 1.1 * sqr(percent*percent + pogr*pogr)
end function
rem=======================================================================================
sub deleteTable(name as string)
tables = ThisComponent.TextTables()
     if tables.hasByName(name) then
     ThisComponent.Text.removeTextContent(tables.getByName(name))
     end if
end sub
rem----------------------------------------------------------------
function sourceDistanceArray(point as double, prefix as string, bdType as string)
	dim ar(1) as variant
	ar = Array(&quot;Неизв&quot;,&quot;Неизв&quot;) rem если точка не будет найдена, останется значение по умолчанию -- не найдено
	rem если это гамма блок:
	if bdType = &quot;gamma&quot; OR bdType = &quot;gamma-Gy&quot; then
		if prefix = &quot;мк&quot; then
				if point = 0.03	then ar = Array(&quot;263&quot;,&quot;304.7&quot;)
				if point = 0.07	then ar = Array(&quot;263&quot;,&quot;200.7&quot;)
				if point = 0.7 	then ar = Array(&quot;0НА&quot;,&quot;236&quot;)
				if point = 7 	then ar = Array(&quot;0НА&quot;,&quot;76&quot;)
				if point = 70 	then ar = Array(&quot;К/С Г3&quot;,&quot;257&quot;)
				if point = 20 	then ar = Array(&quot;9ХК&quot;,&quot;299.9&quot;)
				if point = 240 	then ar = Array(&quot;9ХК&quot;,&quot;88.9&quot;)
		end if
		if prefix = &quot;м&quot; then
				if point = 0.7 	then ar = Array(&quot;К/С Г3&quot;,&quot;82&quot;)
				if point = 7 	then ar = Array(&quot;043&quot;,&quot;357&quot;)
				if point = 70 	then ar = Array(&quot;043&quot;,&quot;114&quot;)
		end if
		if prefix = &quot;&quot; then
				if point = 0.5 	then ar = Array(&quot;163&quot;,&quot;277.4&quot;)
				if point = 0.7 	then ar = Array(&quot;163&quot;,&quot;235&quot;)
				if point = 7 	then ar = Array(&quot;163&quot;,&quot;76&quot;)
				if point = 40 	then ar = Array(&quot;163&quot;,&quot;32.7&quot;)
		end if	
	end if
	sourceDistanceArray = ar
end function
rem------метод для сортировки столбцов в calc-------------------------------------------------
sub sortColumns 
	rem Сортировка выделенных столбцов в Calc 
	dim document   as object
	dim dispatcher as object
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	dim args1(6) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;ByRows&quot;
	args1(0).Value = false
	args1(1).Name = &quot;HasHeader&quot;
	args1(1).Value = true
	args1(2).Name = &quot;CaseSensitive&quot;
	args1(2).Value = false
	args1(3).Name = &quot;IncludeAttribs&quot;
	args1(3).Value = true
	args1(4).Name = &quot;UserDefIndex&quot;
	args1(4).Value = 0
	args1(5).Name = &quot;Col1&quot;
	args1(5).Value = 1
	args1(6).Name = &quot;Ascending1&quot;
	args1(6).Value = true

	dispatcher.executeDispatch(document, &quot;.uno:DataSort&quot;, &quot;&quot;, 0, args1())
end sub
rem------------дата строкой с точками------------------------------
function getDate(DateFieldModel) &apos;YYYYMMDD
	dim dnum as long
	dim year as integer
	dim month as integer
	dim day as integer
	&apos;oDateFieldModel = oDialogBDKG02.Model.getByName(&quot;DateField1&quot;)
	dnum = DateFieldModel.date
	&apos;msgbox &quot;DATE: &quot; &amp; dnum
	day = dnum mod 100
	month = dnum \ 100 mod 100
	year = dnum \ 10000
	getDate = insertZero(day) &amp;&quot;.&quot;&amp; insertZero(month) &amp;&quot;.&quot;&amp; year
end function
rem------------дата строкой слэшами--------------------------------
function getDateSlash(DateFieldModel) &apos;YYYYMMDD
	dim dnum as long
	dim year as integer
	dim month as integer
	dim day as integer
	dnum = DateFieldModel.date
	&apos;msgbox &quot;DATE: &quot; &amp; dnum
	day = dnum mod 100
	month = dnum \ 100 mod 100
	year = dnum \ 10000
	getDateSlash = insertZero(day) &amp;&quot;/&quot;&amp; insertZero(month) &amp;&quot;/&quot;&amp; year
end function
rem-------------------------------------------------------------------------
Sub CopyVariableToClipboard(text as string)
dim document   as object
dim dispatcher as object
dim oDoc, oVC
oDoc = ThisComponent
oVC = oDoc.CurrentController.getViewCursor
oVC.String = text
document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
dispatcher.executeDispatch(document, &quot;.uno:Copy&quot;, &quot;&quot;, 0, Array())
oVC.String = &quot;&quot;
End Sub
rem-------------------------------------------------------------------------
sub insertDate
   dim document   as object
   dim dispatcher as object
   document   = ThisComponent.CurrentController.Frame
   dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
   dim args1(0) as new com.sun.star.beans.PropertyValue
   args1(0).Name = &quot;Text&quot;
   args1(0).Value = getDate()
   dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, args1())
end sub
rem-------------------------------------------------------------------------
function FillArrayFromSelection
rem Супер метод -- заполняет массив данными из выделенной области в Calc и возвращает этот массив
rem 
    dim oCellRange as object
    dim oCursor as object
    dim oRange as object
    dim oSheet as object
    dim startRow as long, startColumn as long, endRow as long, endColumn as long
    dim x,y as long
    dim oRow, oArray

    oSheet = thiscomponent.currentcontroller.activesheet
    oCellRange = thiscomponent.getcurrentselection

    startRow= oCellRange.getrangeaddress.startrow
    startColumn = oCellRange.getrangeaddress.startcolumn
    endRow = oCellRange.getrangeaddress.endrow
    endColumn =oCellRange.getrangeaddress.endcolumn

    oCellRange = thiscomponent.currentcontroller.getselection
    oRange = oSheet.getcellrangebyposition(startColumn,startRow,endColumn,endRow)

    oArray = oRange.getDataArray()
      
    dim RangeData(UBound(oArray),UBound(oArray(0)))
   
    for x = 0 to UBound(oArray)
       for y = 0 to UBound(oArray(x))
          RangeData(x,y) = oArray(x)(y)
       next y
    next x
    FillArrayFromSelection = RangeData
End function

rem -------------------------------------------------------------------------------------------
Sub OpenTemplate(documentURL)
    Dim Doc As Object
    Dim Url As String
    Dim Dummy() &apos;An (empty) array of PropertyValues
    Url = documentURL
    Doc = StarDesktop.loadComponentFromURL(Url, &quot;_blank&quot;, 0, Dummy)
End Sub
rem------------------------------------------------------------
Sub findAndRename(target as String, newName as String)
    Dim oDescriptor &apos;Описатель поиска
    Dim oFound &apos;Найденный диапазон
    Dim oFoundAll &apos;Найденный диапазон
    Dim n% &apos;Общая индексная переменная
    oDescriptor = ThisComponent.createSearchDescriptor()
    oDescriptor.SearchString = target
    oFoundAll = ThisComponent.findAll(oDescriptor)
    For n% = 0 to oFoundAll.getCount()-1
        oFound = oFoundAll.getByIndex(n%)
        oFound.setString(newName)
    Next
End Sub
rem------------------------------------------------------------
private function AbsoluteValue(value as double, pref as string) as double
	select case pref
	case &quot;мк&quot;
		AbsoluteValue = value
	case &quot;м&quot; 
		AbsoluteValue = value * 1000
	case &quot;&quot;
		AbsoluteValue = value * 1000000
	end select
end function
</script:module>